<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
    'pages/index',
    'pages/search',
    'pages/sport'
    ],
    window: {
      "backgroundTextStyle": "light",
      "navigationBarBackgroundColor": "#1296db",
      "navigationBarTitleText": "北工大活动报名平台",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true
    },
    tabBar: {
      "color": "#2c2c2c",
      "selectedColor": "#1296db",
      "borderStyle": "black",
      "backgroundColor": "#ffffff",
      "position": "bottom",
      "list": [
      {
        "selectedIconPath": "/images/toolbar/activity2.png",
        "iconPath": "/images/toolbar/activity.png",
        "pagePath": "pages/index",
        "text": "活动"
      },
      {
        "selectedIconPath": "/images/toolbar/person2.png",
        "iconPath": "/images/toolbar/person.png",
        "pagePath": "pages/myinfo",
        "text": "个人"
      }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  async onLaunch() {
    wepy.setStorageSync('SYSTEM_INFO', 'systemInfo');
    var _this = this
    console.log('this is onLaunch...')
    await wepy.login({
      success (res) {
        console.log(res.code)
        _this.checkFristLogin()
        this.code = res.code
      }
    })
    await wepy.getUserInfo({
      success (res) {
        console.log(res.userInfo)
        this.userInfo = res.userInfo
      }
    })
  }
  // 检查是否是首次登陆
  checkFristLogin () {
    console.log('this is checkFristLogin...')
    var FristLoginMark = wepy.getStorageSync('FristLoginMark')
    console.log(FristLoginMark)
    if (FristLoginMark) {
      console.log('不是第一次登陆')
      this.useAuthSetting()
    } else {
      console.log('是第一次登陆')
      wepy.setStorage({
        key: 'FristLoginMark',
        data: true,
      });
    }
  }

  // 验证用户授权
  useAuthSetting () {
    console.log('进行用户授权验证...')
    var _this = this
    wepy.getSetting({
      success (res) {
        if (res.authSetting['scope.userInfo'] === false ) {
          wepy.showModal({
            title: '授权信息',
            content: '该功能需要授权获取你的公开信息，请进行授权，点击取消返回首页',
            confirmText: '进行授权',
            success: function (res) {
              if (res.confirm) {
                // 打开用户设置页面
                wepy.openSetting({
                  success: (res) => {
                    console.log('this is openSetting res:', res);
                    // res.authSetting = {
                    //   "scope.userInfo": true,
                    //   "scope.werun": true
                    // }
                    console.log("第一次未授权");
                    // self.getUserKey();
                  }
                })
              }
              else {
                console.log("取消");/////////////////////////////////////////////////////////////////////////////
                wepy.navigateTo({
                  url: '/pages/index',
                });
              }
            }
          })
        } // 已经通过了验证
        else {
          // self.getUserKey();
        }
      }
    })
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    // const data = await this.sleep(3)
    // console.log(data)
  }
}
</script>

<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import api from './api/api.js'
export default class extends wepy.app{
  config = {
    pages: [
    'pages/index',
    'pages/search',
    'pages/sport'
    ],
    window: {
      "backgroundTextStyle": "light",
      "navigationBarBackgroundColor": "#1296db",
      "navigationBarTitleText": "北工大活动报名平台",
      "navigationBarTextStyle": "white",
      "enablePullDownRefresh": true
    },
    tabBar: {
      "color": "#2c2c2c",
      "selectedColor": "#1296db",
      "borderStyle": "black",
      "backgroundColor": "#ffffff",
      "position": "bottom",
      "list": [
      {
        "selectedIconPath": "/images/toolbar/activity2.png",
        "iconPath": "/images/toolbar/activity.png",
        "pagePath": "pages/index",
        "text": "活动"
      },
      {
        "selectedIconPath": "/images/toolbar/person2.png",
        "iconPath": "/images/toolbar/person.png",
        "pagePath": "pages/myinfo",
        "text": "个人"
      }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  async onLaunch() {
    var _this = this
    console.log('this is onLaunch...')
  }

  // 检查是否是首次登陆
  checkFristLogin () {
    console.log('this is checkFristLogin...')
    var FristLoginMark = wepy.getStorageSync('FristLoginMark')
    console.log(FristLoginMark)
    if (FristLoginMark) {
      console.log('不是第一次登陆')
    // 检查验证状态
    this.useAuthSetting()
  } else {
    console.log('是第一次登陆')
    wepy.setStorage({
      key: 'FristLoginMark',
      data: true
    });
      // 登陆并且获取用户信息
      this.LoginAndGetUserInfo()
    }
  }

  async LoginAndGetUserInfo(){
    console.log('this is LoginAndGetUserInfo...');

    let temp_code = null
    let temp_userInfo = null
    await wepy.login({
      success (res) {
        console.log(res.code)
        this.globalData.code = res.code
      }
    })
    await wepy.getUserInfo({
      success (res) {
        console.log(res.userInfo)
        this.globalData.userInfo = res.userInfo

        wepy.setStorage({
          key: 'userInfo',
          data: res.userInfo
        })
      }
    })
  }



  // 验证用户授权
  useAuthSetting () {
    console.log('进行用户授权验证...')
    var _this = this
    wepy.getSetting({
      success (res) {
        if (res.authSetting['scope.userInfo'] === false ) {
          console.log('未通过验证')
          wepy.showModal({
            title: '授权信息',
            content: '该功能需要授权获取你的公开信息，请进行授权，点击取消返回首页',
            confirmText: '进行授权',
            success: function (res) {
              if (res.confirm) {
                // 打开用户设置页面
                wepy.openSetting({
                  success: (res) => {
                    console.log('用户授权结果:',res.authSetting);
                  }
                })
              }
              else {
                console.log("取消")
                // 调回首页
                wepy.navigateTo({url: 'search'})
              }
            }
          })
        } // 已经通过了验证
        else {
          // self.getUserKey();
          console.log('通过验证')
          _this.GetUserKey()
        }
      }
    })
  }

  // 获取后端 UserKey
  async GetUserKey () {
    console.log('this is get user key', this.globalData)
    var _this = this
    new Promise(function(resolve, reject){
      wepy.login({
        success (res) {
          console.log(res.code)
          this.globalData.code = res.code
        }
      })
      wepy.getUserInfo({
        success (res) {
          console.log(res.userInfo)
          this.globalData.userInfo = res.userInfo
          resolve()
          wepy.setStorage({
            key: 'userInfo',
            data: res.userInfo
          })
        }
      })
    }).then(function(data){
      console.log('!!!!!!!!!!!!!!!!!',_this.globalData)
      var code_userInfo = {
        code: _this.globalData.code,
        userInfo: _this.globalData.userInfo
      };
      let res = api.GetUerKey({data: code_userInfo})
      console.log('this is res', res);
    })
  }

}


</script>

<!-- 
用户登陆验证流程：
  1.验证用户是否是首次登陆 checkFristLogin()
    1.1 用户是首次登陆,弹窗获取用户授权 => 登陆并获取用户信息LoginAndGetUserInfo()
    1.2 用户不是首次登陆 => 验证用户授权 useAuthSetting()
      1.2.1 用户授权，登陆并获取用户信息LoginAndGetUserInfo()
      1.2.2 用户未授权, 退回到首页
 -->